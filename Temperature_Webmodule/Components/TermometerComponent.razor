@using TemperatureModule.Webpage.Models
@inject IJSRuntime jsRuntime

<link rel="stylesheet" href="css/myown/Termometer.css">

<div id="wrapper">
    <div id="termometer">
        <div id="@medium-latestTemperature" style="height:0" data-value="Latest: @temperatureUnit.Latest.DataPTValue °C"></div>
        <div id="@medium-highestTemperature" style="height:0" data-value="Highest: @temperatureUnit.Highest.DataPTValue °C"></div>
        <div id="@medium-lowestTemperature" style="height:0" data-value="Lowest: @temperatureUnit.Lowest.DataPTValue °C"></div>

        <div id="graduations"></div>
    </div>

    <div id="playground">
        <p id="unit">Celcius C°</p>
    </div>
</div>


@code {
    [Parameter]
    public LatestTemperatureUnit temperatureUnit { get; set; }

    [Parameter]
    public PTIndex mediumType { get; set; }


    private int medium { get { return mediumType == PTIndex.Air ? 0 : 1; } }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await jsRuntime.InvokeAsync<object>("temperature",
                temperatureUnit.Latest.DataPTValue, temperatureUnit.Highest.DataPTValue, temperatureUnit.Lowest.DataPTValue, mediumType);
        }
    }
}
